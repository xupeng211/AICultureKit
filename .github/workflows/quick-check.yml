name: 🚀 Quick Check

permissions:
  contents: read

on:
  push:
    branches:
      - "feature/**"
    paths-ignore:
      - "README.md"
      - "docs/**"
      - "*.md"
      - "WORKFLOW_TEST.md"
      - "workflow_test_log.md"

concurrency:
  group: quick-check-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"

jobs:
  quick-lint-and-test:
    name: 🚀 Quick Lint & Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.event_name == 'push' }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Set enforcement mode by branch
        id: set-mode
        run: |
          BRANCH="${{ github.ref_name }}"
          if [[ "$BRANCH" == "main" || "$BRANCH" == release/* ]]; then
            echo "mode=block" >> "$GITHUB_OUTPUT"
          else
            echo "mode=warn" >> "$GITHUB_OUTPUT"
          fi
          echo "AICULTURE_ENFORCE_BLOCKING=${{ steps.set-mode.outputs.mode }}" >> "$GITHUB_ENV"

      - name: Show enforcement mode
        run: echo "AICULTURE_ENFORCE_BLOCKING=$AICULTURE_ENFORCE_BLOCKING"

      - name: 🎨 Basic Lint Check
        run: |
          echo "🔍 Running basic ruff check..."
          ruff check . --no-fix || echo "⚠️ Lint issues found but not blocking in feature branch"

      - name: 🧪 Quick syntax test (compile only, no imports)
        run: |
          echo "🧪 Testing syntax compilation..."
          python - <<'PY'
          import compileall, sys
          ok = compileall.compile_dir('aiculture', force=True, quiet=1)
          if ok:
              print('✅ All syntax checks passed')
              sys.exit(0)
          else:
              print('❌ Syntax errors found')
              sys.exit(1)
          PY
