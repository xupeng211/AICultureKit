name: 🐳 Docker Build & Publish

permissions:
  contents: read
  packages: write

on:
  workflow_dispatch: # 允许手动触发
  push:
    branches: [ main ]
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  docker-build-and-push:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🏗️ Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 📋 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🧪 Test Docker image functionality
        run: |
          echo "Testing basic functionality..."
          docker run --rm ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} aiculture --version || echo "Version check failed - continuing"
          docker run --rm ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} aiculture --help || echo "Help check failed - continuing"

          # 测试健康检查
          echo "Testing health check..."
          docker run --rm ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} python -c "import aiculture; print('✅ Import successful')" || echo "Import test failed - continuing"

      - name: 🔍 Inspect image
        run: |
          echo "Image inspection:"
          docker image inspect ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}

          echo "Image size:"
          docker images | grep -E "${{ env.IMAGE_NAME }}"

      - name: 📊 Report build status
        run: |
          echo "✅ Docker build and push completed successfully!"
          echo "📦 Image: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}"
          echo "🏷️  Tags: ${{ steps.meta.outputs.tags }}"
          echo "🔗 Registry: ${{ secrets.REGISTRY }}" 